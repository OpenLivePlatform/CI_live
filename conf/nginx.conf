
#user  root;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;

dynamic_conf    conf/nginx_dynamic.conf 5m;
dynamic_log     logs/error_dynamic.log  error;

stream_zone  buckets=10007 streams=10000;

worker_rlimit_nofile 102400;
worker_rlimit_core   2G;
working_directory    /tmp;

events {
    worker_connections  102400;
    multi_listen        unix:/tmp/rtmp 1935;
    multi_listen        unix:/tmp/http 80;
    multi_listen        unix:/tmp/http.m 8086;
    multi_listen        1936 1935;
    multi_listen        8090 80;
}

rtmp {
    rtmp_auto_pull      on;
    rtmp_auto_pull_port unix:/tmp/rtmp;

    server {
        listen          1935;

        application * {
            live        on;
            cache_time  3s;
            auth_uri    http://127.0.0.1:6200/auth?app=$app&swf_url=$swfurl&tc_url=$tcurl&client=$addr;
        }
    }
}


http {
    include                 mime.types;
    default_type            application/octet-stream;
    client_max_body_size    2k;

    log_format main '$http_host $remote_addr [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" $request_time $upstream_response_time';

    access_log          logs/access.log  main;

    sendfile            on;
    keepalive_timeout   65;

    server_tokens       off;

    server {
        listen          80;

        access_by_lua_block {
            local http = require "resty.http"
            local httpc = http.new()

            local uri = "http://127.0.0.1:6200/auth"
            if ngx.var.args then
                uri = uri .. "?" .. ngx.var.args
            end

            local res, err = httpc:request_uri(uri)

            if not res then
                ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
            end

            if res.status == 200 then
                ngx.exit(ngx.DECLINED)
            end

            ngx.exit(res.status)
        }

        location / {
            flv_live 1935;
        }
    }

    server {
        listen          8086;

        location = /stat {
            broadcast unix:/tmp/http.m /stat_proxy;
        }

        location = /control {
            broadcast unix:/tmp/http.m /control_proxy;
        }

        location /stat_proxy/ {
            rewrite ^/stat_proxy/(.*) /stat_inner break;
            proxy_pass http://$1:;
        }

        location /control_proxy/ {
            rewrite ^/control_proxy/(.*) /control_inner break;
            proxy_pass http://$1:;
        }

        location = /stat_inner {
            rtmp_stat   all;
        }

        location = /control_inner {
            rtmp_control all;
        }
    }

    server {
        listen          6200;

        location /auth {
            return 200;
        }
    }
}
